[{"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\index.js":"1","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\App.js":"2","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\reportWebVitals.js":"3","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\Home.js":"4","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\customerWindowGUI.js":"5","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components\\ManagerWindow.jsx":"6","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\Header.js":"7","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\Cart.js":"8","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\deliveryAddress.js":"9","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\Menu.js":"10","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\tempData.js":"11","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components\\Table.jsx":"12","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\MenuItem.js":"13","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components\\Columns.jsx":"14"},{"size":553,"mtime":1668188145575,"results":"15","hashOfConfig":"16"},{"size":678,"mtime":1668188145567,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1668188145575,"results":"18","hashOfConfig":"16"},{"size":924,"mtime":1668188145567,"results":"19","hashOfConfig":"16"},{"size":1511,"mtime":1668987450738,"results":"20","hashOfConfig":"16"},{"size":12000,"mtime":1668760669946,"results":"21","hashOfConfig":"16"},{"size":280,"mtime":1668188145574,"results":"22","hashOfConfig":"16"},{"size":327,"mtime":1668188145567,"results":"23","hashOfConfig":"16"},{"size":1275,"mtime":1668188145575,"results":"24","hashOfConfig":"16"},{"size":474,"mtime":1668188145574,"results":"25","hashOfConfig":"16"},{"size":486,"mtime":1668188145575,"results":"26","hashOfConfig":"16"},{"size":1621,"mtime":1668762431720,"results":"27","hashOfConfig":"16"},{"size":670,"mtime":1668188145575,"results":"28","hashOfConfig":"16"},{"size":347,"mtime":1668760669930,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1g7mcop",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"33"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\index.js",[],[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\App.js",[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\reportWebVitals.js",[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\Home.js",[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\customerWindowGUI.js",["76","77"],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components\\ManagerWindow.jsx",["78"],[],"import React, { Component } from 'react';\r\nimport './ManagerWindow.css';\r\nimport { Table } from './Table';\r\n\r\nclass ManagerWindow extends Component {\r\n    state = { \r\n\r\n    };\r\n\r\n    render() { \r\n        const handleRestock = async (event, nameStr) => {\r\n            const requestURL = \"http://localhost:3300/restock\";\r\n\t        const request = new Request(requestURL);\r\n\r\n\t        const response = await fetch(request, {\r\n\t\t\t    method: 'GET', \r\n                    headers: { \r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    mode: 'cors', \r\n            });\r\n            const data = await response.json();\r\n            var i = 0;\r\n            for (i = 0; i < data.length; i++) {\r\n                console.log('ingredient          = ' + data[i].ingredient);\r\n                console.log('ingredientremaining = ' + data[i].ingredientremaining);\r\n                console.log('minimumamount       = ' + data[i].minimumamount);\r\n            }\r\n              \r\n            //window.open(\"http://localhost:3300/restock\");\r\n            /* \r\n                //console.log('hello' + recvData.portal + '-124');\r\n                table = '<table>';\r\n\r\n                table += '<th>';\r\n                table += 'ingredient';\r\n                table += '</th>\r\n                table += '<th>';\r\n                table += 'remaining';\r\n                table += '</th>\r\n                    \r\n                while (until last line) {\r\n                    // Get the next line and split the fields\r\n                    /// recvData2= recvData.split(\" \");\r\n                    table += '<tr>';\r\n                    table += '<td>';\r\n                    table += recvData2[0];\r\n                    table += '</td>';\r\n                    table += '<td>';\r\n                    table += recvData2[1];\r\n                    table += '</td>';\r\n                    table += '</tr>';\r\n                }\r\n                document.insertElement(\"mytable\") = table;\r\n               */ \r\n \r\n            const winHtml = `<!DOCTYPE html>\r\n                            <html>\r\n                            <head>\r\n                                <title>Restock Window</title>\r\n                            </head>\r\n                            <body>\r\n                                <h1>This is the data!</h1>\r\n                            </body>\r\n                            <div name\"mytable\">\r\n                            </div>\r\n                            </html>`;\r\n\r\n            const winUrl = URL.createObjectURL( new Blob([winHtml], { type: \"text/html\" }));\r\n\r\n            const win = window.open( winUrl, \"win\", `width=800,height=400,screenX=200,screenY=200`);\r\n            if (window.focus())\r\n                win.focus();\r\n\r\n\r\n            //window.open(\"http://localhost:3300/sales?\" + new URLSearchParams({\r\n            //      startdate:'${startdate}', enddate: '${enddate}'} ),{ mode: 'no-cors'})\r\n        }\r\n        // Client code to process 'Sales' when user clicks on 'sales' button\r\n        const handleSales = async (event, nameStr) => {\r\n            // Read the input from propmpt window\r\n            // It is a text field and user will enter '11/01/2022 11/09/2022'\r\n\r\n            let timeinput = prompt(\"Enter Start Time and End Time (MM/DD/YYYY MM/DD/YYYY)\");\r\n            if (timeinput != null) {\r\n                // OK button is pressed so timeinput is not null\r\n                // split the input and get start date and end date\r\n                let  timeperiods = timeinput.split(\" \");\r\n                var  startdate = timeperiods[0];\r\n                var  enddate = timeperiods[1];\r\n\r\n                // Create a JSON object 'sendData' (name: value) format\r\n                const sendData = {startdate,enddate};\r\n\r\n                // Create a request URL to send to the server\r\n                const requestURL = \"http://localhost:3300/sales\";\r\n                const request = new Request(requestURL);\r\n\r\n                // Send the request along with the data inside 'request body'\r\n                const response = await fetch(request, {\r\n                    method: 'POST', \r\n                    headers: { \r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    mode: 'cors', \r\n                    body: JSON.stringify(sendData)\r\n                });\r\n                // Now obtain the data from server.  Server sent a text so read it as text\r\n                const recvData = await response.json();\r\n                var i = 0;\r\n                for (i = 0; i < recvData.length; i++) {\r\n                    console.log(\"orderpk    = \" + recvData[i].orderpk);\r\n                    console.log(\"orderid    = \" + recvData[i].orderid);\r\n                    console.log(\"lineitem   = \" + recvData[i].lineitem);\r\n                    console.log(\"itemname   = \" + recvData[i].itemname);\r\n                    console.log(\"itemprice  = \" + recvData[i].itemprice);\r\n                    console.log(\"orderday   = \" + recvData[i].orderday);\r\n                    console.log(\"ordermonth = \" + recvData[i].ordermonth);\r\n                    console.log(\"orderyear  = \" + recvData[i].orderyear);\r\n                }\r\n                // Now process the data and create a 'table' html element  to show in a new window\r\n            }\r\n\r\n        }\r\n        const handleExcess = async (event, nameStr) => {\r\n            // Read the input from propmpt window\r\n            // It is a text field and user will enter '11/01/2022 11/09/2022'\r\n\r\n            let timeinput = prompt(\"Enter Start Time and End Time (MM/DD/YYYY MM/DD/YYYY)\");\r\n            if (timeinput != null) {\r\n                // OK button is pressed so timeinput is not null\r\n                // split the input and get start date and end date\r\n                let  timeperiods = timeinput.split(\" \");\r\n                var  startdate = timeperiods[0];\r\n                var  enddate = timeperiods[1];\r\n\r\n                // Create a JSON object 'sendData' (name: value) format\r\n                const sendData = {startdate,enddate};\r\n\r\n                // Create a request URL to send to the server\r\n                const requestURL = \"http://localhost:3300/excess\";\r\n                const request = new Request(requestURL);\r\n\r\n                // Send the request along with the data inside 'request body'\r\n\t            const response = await fetch(request, {\r\n\t\t\t        method: 'POST', \r\n                    headers: { \r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    mode: 'cors', \r\n                    body: JSON.stringify(sendData)\r\n                });\r\n                // Now obtain the data from server.  Server sent a text so read it as text\r\n                const recvData = await response.text();\r\n                // Excess report will come as list of strings.\r\n            }\r\n\r\n        }\r\n              \r\n        return (\r\n            <section className='ManagerWindow'>\r\n                <div className='left-half'>\r\n                    <h1>Inventory</h1>\r\n                    <Table></Table>\r\n                </div>\r\n                <div className='right-half'>\r\n                    <div class=\"report-btn-group\">\r\n                        <button onClick={event => handleSales(event,'sales')}class=\"role-button\">Sales</button>\r\n                        <button onClick={event => handleExcess(event,'excess')}class=\"role-button\">Excess</button>\r\n                        <button onClick={event => handleRestock(event,'restock')}class=\"role-button\">Restock</button>\r\n                        <button class=\"role-button\">Add-ons</button>\r\n                    </div>\r\n\r\n                    <h2>Add Menu Item</h2>\r\n                    <div className='add-menu-item'>\r\n                        <div className='input-class'>\r\n                            <form>\r\n                                <label>\r\n                                    <input type=\"text\" placeholder=\"Enter menu item name\" />\r\n                                    <br></br>\r\n                                    <input type=\"text\" placeholder=\"Enter menu item price\" />\r\n                                    <br></br>\r\n                                    <input type=\"text\" placeholder=\"Enter menu item ingredients\" />\r\n                                    <br></br>\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <div className='submit-class'>\r\n                            <button className='submit-btn'>+</button>\r\n                        </div>\r\n                    </div> \r\n\r\n                    <h2>Edit Price</h2>\r\n                    <div className='edit-price'>\r\n                        <div className='input-class'>\r\n                            <form>\r\n                                <label>\r\n                                    <select name='menu-items'>\r\n                                        <option value='temp1'>temp1</option>\r\n                                        <option value='temp2'>temp2</option>\r\n                                        <option value='temp3'>temp3</option>\r\n                                        <option value='temp4'>temp4</option>\r\n                                        <option value='temp5'>temp5</option>\r\n                                    </select>\r\n                                    <br></br>\r\n                                    <input type=\"text\" placeholder=\"Enter new menu item price\" />\r\n                                    <br></br>\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <div className='submit-class'>\r\n                            <button className='submit-btn'>+</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h2>Restock Ingredient</h2>\r\n                    <div className='restock-ingredient'>\r\n                        <div className='input-class'>\r\n                            <form>\r\n                                <label>\r\n                                    <select name='menu-items'>\r\n                                        <option value='temp1'>temp1</option>\r\n                                        <option value='temp2'>temp2</option>\r\n                                        <option value='temp3'>temp3</option>\r\n                                        <option value='temp4'>temp4</option>\r\n                                        <option value='temp5'>temp5</option>\r\n                                    </select>\r\n                                    <br></br>\r\n                                    <input type=\"text\" placeholder=\"Enter ingredient quantity\" />\r\n                                    <br></br>\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <div className='submit-class'>\r\n                            <button className='submit-btn'>+</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h2>Add Ingredient</h2>\r\n                    <div className='add-ingredient'>\r\n                        <div className='input-class'>\r\n                            <form>\r\n                                <label>\r\n                                    <input type=\"text\" placeholder=\"Enter ingredient name\" />\r\n                                    <br></br>\r\n                                    <input type=\"text\" placeholder=\"Enter ingredient quantity\" />\r\n                                    <br></br>\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <div className='submit-class'>\r\n                            <button className='submit-btn'>+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default ManagerWindow;\r\n","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\Header.js",[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\Cart.js",[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\deliveryAddress.js",["79","80","81"],[],"import React from 'react';\r\nimport './customerWindowGUI.css'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default function DeliveryInput() {\r\n    return (\r\n        <header>\r\n            <h2 className=\"delivery_heading\">Enter Delivery Address</h2>\r\n                <div className='add-menu-item'>\r\n                    <div className='input-class'>\r\n                        <form>\r\n                            <label>\r\n                                <input type=\"text\" placeholder=\"12345 Main St.\" />\r\n                                <br></br>\r\n                                <input type=\"text\" placeholder=\"Dallas, TX\" />\r\n                                <br></br>\r\n                                <input type=\"text\" placeholder=\"73628\" />\r\n                                <br></br>\r\n                            </label>\r\n                        </form>\r\n                    </div>\r\n                    <div>\r\n                        <div className='submit-class'>\r\n                            <button className='save-address-button'>Save Address</button>\r\n                        </div>\r\n                    </div>    \r\n                </div>    \r\n        </header>\r\n    );\r\n}","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\Menu.js",[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\tempData.js",[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components\\Table.jsx",[],[],"C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components_customer\\MenuItem.js",["82","83","84","85"],[],"import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n/* import getMenuitems from '../appdb';*/\r\n\r\nexport default function MenuItems(props) {\r\n    const {item} = props;\r\n    return (\r\n        <div className=\"item-block\">\r\n            <div className=\"item\">\r\n                <button className='customize_button'>Customize</button>\r\n                <button className='customize_button'>+</button>\r\n                <button className='customize_button'>-</button>\r\n\r\n                <div className=\"place-holder\">.</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\aarth\\Documents\\CollegeFall23\\CSCE315\\CSCE_315_Project3\\src\\components\\Columns.jsx",[],[],{"ruleId":"86","severity":1,"message":"87","line":7,"column":16,"nodeType":"88","messageId":"89","endLine":7,"endColumn":24},{"ruleId":"86","severity":1,"message":"90","line":15,"column":9,"nodeType":"88","messageId":"89","endLine":15,"endColumn":18},{"ruleId":"86","severity":1,"message":"91","line":154,"column":23,"nodeType":"88","messageId":"89","endLine":154,"endColumn":31},{"ruleId":"86","severity":1,"message":"92","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":17},{"ruleId":"86","severity":1,"message":"93","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":11},{"ruleId":"86","severity":1,"message":"94","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":11},{"ruleId":"86","severity":1,"message":"92","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"86","severity":1,"message":"93","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":11},{"ruleId":"86","severity":1,"message":"94","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":11},{"ruleId":"86","severity":1,"message":"95","line":8,"column":12,"nodeType":"88","messageId":"89","endLine":8,"endColumn":16},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'menuitems' is assigned a value but never used.","'recvData' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'item' is assigned a value but never used."]